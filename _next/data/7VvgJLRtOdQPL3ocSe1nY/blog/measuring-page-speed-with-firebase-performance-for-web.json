{"pageProps":{"post":{"title":"Measuring page speed with Firebase Performance for Web","date":"2019-05-19T00:00:00.000Z","description":"Learn how to implement Firebase Performance Monitoring for web to track page speed metrics and improve user experience, with a complete implementation guide.","slug":"measuring-page-speed-with-firebase-performance-for-web","content":"\nAt the Google I/O 2019 Firebase released it's Firebase Performance Monitoring plugin to the web.\nFirebase Performance Monitoring is a easy way to find out page speed bottlenecks that are hurting the user experience.\nThe web version of this plugin is now in open beta.\n\n## What does the Firebase Performance Monitoring measure?\n\nThe plugin measures [six default traces](#default-traces) and network traffic's response time.\nUsers also can implement their own measurements using JavaScript described in [Firebase Performance Monitoring Documentation](https://firebase.google.com/docs/perf-mon/get-started-web#add-custom-trace).\n\n![Firebase Performance Monitoring default metrics dashboard](/firebase-perf-screenshot.png)\n\n## Implementation tutorial\n\nIn this tutorial we go through how to implement the SDK to a website.\nThere are many ways to implement this SDK. In this tutorial we are implementing the standalone SDK from the CDN.\nCheck out other ways from the [Firebase Performance Monitoring official documentation](https://firebase.google.com/docs/perf-mon/get-started-web).\n\n### The HTML tracking snippet for Firebase Performance Monitoring\n\nImplement snippet below as a first tag inside head.\n\n```html\n<head>\n  <!-- Firebase Performance for Web -->\n  <script>\n    !(function (n, e) {\n      var t,\n        o,\n        i,\n        c = [],\n        f = { passive: !0, capture: !0 },\n        r = new Date(),\n        a = \"pointerup\",\n        u = \"pointercancel\";\n      function p(n, c) {\n        t || ((t = c), (o = n), (i = new Date()), w(e), s());\n      }\n      function s() {\n        o >= 0 &&\n          o < i - r &&\n          (c.forEach(function (n) {\n            n(o, t);\n          }),\n          (c = []));\n      }\n      function l(t) {\n        if (t.cancelable) {\n          var o =\n            (t.timeStamp > 1e12 ? new Date() : performance.now()) - t.timeStamp;\n          \"pointerdown\" == t.type\n            ? (function (t, o) {\n                function i() {\n                  p(t, o), r();\n                }\n                function c() {\n                  r();\n                }\n                function r() {\n                  e(a, i, f), e(u, c, f);\n                }\n                n(a, i, f), n(u, c, f);\n              })(o, t)\n            : p(o, t);\n        }\n      }\n      function w(n) {\n        [\"click\", \"mousedown\", \"keydown\", \"touchstart\", \"pointerdown\"].forEach(\n          function (e) {\n            n(e, l, f);\n          }\n        );\n      }\n      w(n),\n        (self.perfMetrics = self.perfMetrics || {}),\n        (self.perfMetrics.onFirstInputDelay = function (n) {\n          c.push(n), s();\n        });\n    })(addEventListener, removeEventListener);\n  </script>\n  <script>\n    (function (sa, fbc) {\n      function load(f, c) {\n        var a = document.createElement(\"script\");\n        a.async = 1;\n        a.src = f;\n        var s = document.getElementsByTagName(\"script\")[0];\n        s.parentNode.insertBefore(a, s);\n      }\n      load(sa);\n      window.onload = function () {\n        firebase.initializeApp(fbc).performance();\n      };\n    })(\n      \"https://www.gstatic.com/firebasejs/6.0.2/firebase-performance-standalone.js\",\n      {\n        apiKey: \"{{apiKey}}\",\n        authDomain: \"{{authDomain}}\",\n        databaseURL: \"{{databaseURL}}\",\n        projectId: \"{{projectId}}\",\n        storageBucket: \"{{storageBucket}}\",\n        messagingSenderId: \"{{messagingSenderId}}\",\n        appId: \"{{appId}}\",\n      }\n    );\n  </script>\n  <!-- End Firebase Performance for Web -->\n\n  ...\n</head>\n```\n\nGet your app's Firebase config object\n\n```js\n{\n  apiKey: \"{{apiKey}}\",\n  authDomain: \"{{authDomain}}\",\n  databaseURL: \"{{databaseURL}}\",\n  projectId: \"{{projectId}}\",\n  storageBucket: \"{{storageBucket}}\",\n  messagingSenderId: \"{{messagingSenderId}}\",\n  appId: \"{{appId}}\"\n}\n```\n\nfrom the Firebase console.\nMore info from the [Firebase official documentation](https://firebase.google.com/docs/web/setup#config-object).\n\n## Ready to measure\n\nYou ready to measure your site's performance. After the implementation give Firebase 12 hours to gather data.\n\n## Default traces\n\nThere are six default traces that the plugin measures.\n\n##### first paint traces\n\nmeasure the time between when the user navigates to a page and when any visual change happens\n\n##### first contentful paint traces\n\nmeasure the time between when a user navigates to a page and when meaningful content displays, like an image or text\n\n##### domInteractive traces\n\nmeasure the time between when the user navigates to a page and when the page is considered interactive for the user\n\n##### domContentLoadedEventEnd traces\n\nmeasure the time between when the user navigates to a page and when the initial HTML document is completely loaded and parsed\n\n##### loadEventEnd traces\n\nmeasure the time between when the user navigates to the page and when the current document's load event completes\n\n##### first input delay traces\n\nmeasure the time between when the user interacts with a page and when the browser is able to respond to that input\n","htmlContent":"<p>At the Google I/O 2019 Firebase released it&#39;s Firebase Performance Monitoring plugin to the web.\nFirebase Performance Monitoring is a easy way to find out page speed bottlenecks that are hurting the user experience.\nThe web version of this plugin is now in open beta.</p>\n<h2>What does the Firebase Performance Monitoring measure?</h2>\n<p>The plugin measures <a href=\"#default-traces\">six default traces</a> and network traffic&#39;s response time.\nUsers also can implement their own measurements using JavaScript described in <a href=\"https://firebase.google.com/docs/perf-mon/get-started-web#add-custom-trace\">Firebase Performance Monitoring Documentation</a>.</p>\n<p><img src=\"/firebase-perf-screenshot.png\" alt=\"Firebase Performance Monitoring default metrics dashboard\"></p>\n<h2>Implementation tutorial</h2>\n<p>In this tutorial we go through how to implement the SDK to a website.\nThere are many ways to implement this SDK. In this tutorial we are implementing the standalone SDK from the CDN.\nCheck out other ways from the <a href=\"https://firebase.google.com/docs/perf-mon/get-started-web\">Firebase Performance Monitoring official documentation</a>.</p>\n<h3>The HTML tracking snippet for Firebase Performance Monitoring</h3>\n<p>Implement snippet below as a first tag inside head.</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- Firebase Performance for Web --&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n    !(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">n, e</span>) {\n      <span class=\"hljs-keyword\">var</span> t,\n        o,\n        i,\n        c = [],\n        f = { <span class=\"hljs-attr\">passive</span>: !<span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">capture</span>: !<span class=\"hljs-number\">0</span> },\n        r = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(),\n        a = <span class=\"hljs-string\">&quot;pointerup&quot;</span>,\n        u = <span class=\"hljs-string\">&quot;pointercancel&quot;</span>;\n      <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">p</span>(<span class=\"hljs-params\">n, c</span>) {\n        t || ((t = c), (o = n), (i = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>()), <span class=\"hljs-title function_\">w</span>(e), <span class=\"hljs-title function_\">s</span>());\n      }\n      <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">s</span>(<span class=\"hljs-params\"></span>) {\n        o &gt;= <span class=\"hljs-number\">0</span> &amp;&amp;\n          o &lt; i - r &amp;&amp;\n          (c.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">n</span>) {\n            <span class=\"hljs-title function_\">n</span>(o, t);\n          }),\n          (c = []));\n      }\n      <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">l</span>(<span class=\"hljs-params\">t</span>) {\n        <span class=\"hljs-keyword\">if</span> (t.<span class=\"hljs-property\">cancelable</span>) {\n          <span class=\"hljs-keyword\">var</span> o =\n            (t.<span class=\"hljs-property\">timeStamp</span> &gt; <span class=\"hljs-number\">1e12</span> ? <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>() : performance.<span class=\"hljs-title function_\">now</span>()) - t.<span class=\"hljs-property\">timeStamp</span>;\n          <span class=\"hljs-string\">&quot;pointerdown&quot;</span> == t.<span class=\"hljs-property\">type</span>\n            ? (<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">t, o</span>) {\n                <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">i</span>(<span class=\"hljs-params\"></span>) {\n                  <span class=\"hljs-title function_\">p</span>(t, o), <span class=\"hljs-title function_\">r</span>();\n                }\n                <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">c</span>(<span class=\"hljs-params\"></span>) {\n                  <span class=\"hljs-title function_\">r</span>();\n                }\n                <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">r</span>(<span class=\"hljs-params\"></span>) {\n                  <span class=\"hljs-title function_\">e</span>(a, i, f), <span class=\"hljs-title function_\">e</span>(u, c, f);\n                }\n                <span class=\"hljs-title function_\">n</span>(a, i, f), <span class=\"hljs-title function_\">n</span>(u, c, f);\n              })(o, t)\n            : <span class=\"hljs-title function_\">p</span>(o, t);\n        }\n      }\n      <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">w</span>(<span class=\"hljs-params\">n</span>) {\n        [<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-string\">&quot;mousedown&quot;</span>, <span class=\"hljs-string\">&quot;keydown&quot;</span>, <span class=\"hljs-string\">&quot;touchstart&quot;</span>, <span class=\"hljs-string\">&quot;pointerdown&quot;</span>].<span class=\"hljs-title function_\">forEach</span>(\n          <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">e</span>) {\n            <span class=\"hljs-title function_\">n</span>(e, l, f);\n          }\n        );\n      }\n      <span class=\"hljs-title function_\">w</span>(n),\n        (self.<span class=\"hljs-property\">perfMetrics</span> = self.<span class=\"hljs-property\">perfMetrics</span> || {}),\n        (self.<span class=\"hljs-property\">perfMetrics</span>.<span class=\"hljs-property\">onFirstInputDelay</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">n</span>) {\n          c.<span class=\"hljs-title function_\">push</span>(n), <span class=\"hljs-title function_\">s</span>();\n        });\n    })(addEventListener, removeEventListener);\n  </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n    (<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">sa, fbc</span>) {\n      <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">load</span>(<span class=\"hljs-params\">f, c</span>) {\n        <span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;script&quot;</span>);\n        a.<span class=\"hljs-property\">async</span> = <span class=\"hljs-number\">1</span>;\n        a.<span class=\"hljs-property\">src</span> = f;\n        <span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">&quot;script&quot;</span>)[<span class=\"hljs-number\">0</span>];\n        s.<span class=\"hljs-property\">parentNode</span>.<span class=\"hljs-title function_\">insertBefore</span>(a, s);\n      }\n      <span class=\"hljs-title function_\">load</span>(sa);\n      <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">onload</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n        firebase.<span class=\"hljs-title function_\">initializeApp</span>(fbc).<span class=\"hljs-title function_\">performance</span>();\n      };\n    })(\n      <span class=\"hljs-string\">&quot;https://www.gstatic.com/firebasejs/6.0.2/firebase-performance-standalone.js&quot;</span>,\n      {\n        <span class=\"hljs-attr\">apiKey</span>: <span class=\"hljs-string\">&quot;{{apiKey}}&quot;</span>,\n        <span class=\"hljs-attr\">authDomain</span>: <span class=\"hljs-string\">&quot;{{authDomain}}&quot;</span>,\n        <span class=\"hljs-attr\">databaseURL</span>: <span class=\"hljs-string\">&quot;{{databaseURL}}&quot;</span>,\n        <span class=\"hljs-attr\">projectId</span>: <span class=\"hljs-string\">&quot;{{projectId}}&quot;</span>,\n        <span class=\"hljs-attr\">storageBucket</span>: <span class=\"hljs-string\">&quot;{{storageBucket}}&quot;</span>,\n        <span class=\"hljs-attr\">messagingSenderId</span>: <span class=\"hljs-string\">&quot;{{messagingSenderId}}&quot;</span>,\n        <span class=\"hljs-attr\">appId</span>: <span class=\"hljs-string\">&quot;{{appId}}&quot;</span>,\n      }\n    );\n  </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- End Firebase Performance for Web --&gt;</span>\n\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n</code></pre><p>Get your app&#39;s Firebase config object</p>\n<pre><code class=\"language-js\">{\n  <span class=\"hljs-attr\">apiKey</span>: <span class=\"hljs-string\">&quot;{{apiKey}}&quot;</span>,\n  <span class=\"hljs-attr\">authDomain</span>: <span class=\"hljs-string\">&quot;{{authDomain}}&quot;</span>,\n  <span class=\"hljs-attr\">databaseURL</span>: <span class=\"hljs-string\">&quot;{{databaseURL}}&quot;</span>,\n  <span class=\"hljs-attr\">projectId</span>: <span class=\"hljs-string\">&quot;{{projectId}}&quot;</span>,\n  <span class=\"hljs-attr\">storageBucket</span>: <span class=\"hljs-string\">&quot;{{storageBucket}}&quot;</span>,\n  <span class=\"hljs-attr\">messagingSenderId</span>: <span class=\"hljs-string\">&quot;{{messagingSenderId}}&quot;</span>,\n  <span class=\"hljs-attr\">appId</span>: <span class=\"hljs-string\">&quot;{{appId}}&quot;</span>\n}\n</code></pre><p>from the Firebase console.\nMore info from the <a href=\"https://firebase.google.com/docs/web/setup#config-object\">Firebase official documentation</a>.</p>\n<h2>Ready to measure</h2>\n<p>You ready to measure your site&#39;s performance. After the implementation give Firebase 12 hours to gather data.</p>\n<h2>Default traces</h2>\n<p>There are six default traces that the plugin measures.</p>\n<h5>first paint traces</h5>\n<p>measure the time between when the user navigates to a page and when any visual change happens</p>\n<h5>first contentful paint traces</h5>\n<p>measure the time between when a user navigates to a page and when meaningful content displays, like an image or text</p>\n<h5>domInteractive traces</h5>\n<p>measure the time between when the user navigates to a page and when the page is considered interactive for the user</p>\n<h5>domContentLoadedEventEnd traces</h5>\n<p>measure the time between when the user navigates to a page and when the initial HTML document is completely loaded and parsed</p>\n<h5>loadEventEnd traces</h5>\n<p>measure the time between when the user navigates to the page and when the current document&#39;s load event completes</p>\n<h5>first input delay traces</h5>\n<p>measure the time between when the user interacts with a page and when the browser is able to respond to that input</p>\n"},"canonicalUrl":"https://toukopeltomaa.com/blog/measuring-page-speed-with-firebase-performance-for-web"},"__N_SSG":true}